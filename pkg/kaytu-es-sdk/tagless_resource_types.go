package kaytu

var awsTaglessResourceTypes = []string{
	"AWS::Account::AlternateContact",
	"AWS::ApiGateway::Authorizer",
	"AWS::ApiGatewayV2::Route",
	"AWS::ApplicationAutoScaling::Target",
	"AWS::Athena::WorkGroup",
	"AWS::AutoScaling::LaunchConfiguration",
	"AWS::Backup::Plan",
	"AWS::Backup::ProtectedResource",
	"AWS::Backup::RecoveryPoint",
	"AWS::Backup::ReportPlan",
	"AWS::Backup::Selection",
	"AWS::Backup::Vault",
	"AWS::CodeBuild::Build",
	"AWS::CodeBuild::SourceCredential",
	"AWS::Config::ConfigurationRecorder",
	"AWS::DirectoryService::Certificate",
	"AWS::EC2::Region",
	"AWS::EC2::RegionalSettings",
	"AWS::EC2::SecurityGroupRule",
	"AWS::ElastiCache::ReplicationGroup",
	"AWS::ElasticLoadBalancingV2::Listener",
	"AWS::EMR::BlockPublicAccessConfiguration",
	"AWS::Glue::DataCatalogEncryptionSettings",
	"AWS::Glue::DevEndpoint",
	"AWS::Glue::Job",
	"AWS::Glue::SecurityConfiguration",
	"AWS::GuardDuty::Finding",
	"AWS::IAM::AccessKey",
	"AWS::IAM::Account",
	"AWS::IAM::AccountPasswordPolicy",
	"AWS::IAM::AccountSummary",
	"AWS::IAM::CredentialReport",
	"AWS::IAM::Group",
	"AWS::Inspector::Finding",
	"AWS::Logs::MetricFilter",
	"AWS::RDS::DBEventSubscription",
	"AWS::S3::AccountSetting",
	"AWS::SNS::Subscription",
	"AWS::SSM::ManagedInstance",
	"AWS::SSM::ManagedInstanceCompliance",
}

var azureTaglessResourceTypes = []string{
	"Microsoft.Authorization/policyAssignments",
	"Microsoft.Authorization/roleAssignment",
	"Microsoft.Authorization/roleDefinitions",
	"Microsoft.Automation/AutomationVariables",
	"Microsoft.Insights/guestDiagnosticSettings",
	"Microsoft.Network/virtualNetworks/subnets",
	"Microsoft.Resources/links",
	"Microsoft.Resources/subscriptions",
	"Microsoft.Resources/subscriptions/locations",
	"Microsoft.Resources/tenants",
	"Microsoft.Entra/users",
	"Microsoft.Security/autoProvisioningSettings",
	"Microsoft.Security/locations/jitNetworkAccessPolicies",
	"Microsoft.Security/pricings",
	"Microsoft.Security/securityContacts",
	"Microsoft.Security/settings",
	"Microsoft.Storage/storageaccounts/blobservices/containers",
}
